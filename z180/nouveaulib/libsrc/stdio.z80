bdos_call:              equ 0x0005
bdos_conout:            equ 0x02
bdos_conio:             equ 0x06
bdos_const:             equ 0x0b
bdos_fopen:             equ 0x0f
bdos_fclose:            equ 0x10
bdos_fread:             equ 0x14
bdos_fdelete:           equ 0x13
bdos_fwrite:            equ 0x15
bdos_fmake:             equ 0x16
bdos_setdma:            equ 0x1a
bdos_gsuid:             equ 0x20

fcb:                    equ 0x5c
fblk_c:                 db 0x00         ; 8bit counter of 128byte blocks
p_flast:                dw 0x0000       ; ptr to last byte of memory
p_fcur:                 dw 0x0000       ; ptr to current byte in file
fcount:                 db 0x80         ; number of bytes to read or write
frec:                   ds 0x80         ; 128 byte internal buffer for file io


public  getk, puts

section LIB
;===============================================================================
; CP/M Get Key press
; INPUT: void
; OUTPUT: ascii of pressed key in A
; CLOBBERS: BC, DE
;===============================================================================
getk:
        ld      c,bdos_conio
        ld      de,0xff
        call    bdos_call
        ret
;===============================================================================
; CP/M Write char
; INPUT: ascii value to write in A
; OUTPUT: void
; CLOBBERS: BC, DE
;===============================================================================
puts:
        ld      e,a
        ld      c,bdos_conout
        call    bdos_call
        ret

